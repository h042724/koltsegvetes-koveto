{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"post\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"loading\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"a\", {\n  href: \"https://aka.ms/jspsintegrationvue\"\n}, \"https://aka.ms/jspsintegrationvue\", -1 /* HOISTED */);\nconst _hoisted_4 = {\n  key: 1,\n  class: \"content\"\n};\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Date\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Temp. (C)\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Temp. (F)\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Summary\")])], -1 /* HOISTED */);\n\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_ctx.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createTextVNode(\" Loading... Please refresh once the ASP.NET backend has started. See \"), _hoisted_3, _createTextVNode(\" for more details. \")])) : _createCommentVNode(\"v-if\", true), _ctx.post ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createElementVNode(\"table\", null, [_hoisted_5, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.post, forecast => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: forecast.date\n    }, [_createElementVNode(\"td\", null, _toDisplayString(forecast.date), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(forecast.temperatureC), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(forecast.temperatureF), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(forecast.summary), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","_createElementVNode","href","_createElementBlock","_hoisted_1","_ctx","loading","_hoisted_2","_hoisted_3","post","_hoisted_4","_hoisted_5","_Fragment","_renderList","forecast","key","date","_toDisplayString","temperatureC","temperatureF","summary"],"sources":["C:\\Users\\bajna\\Desktop\\GitHub repo final\\koltsegvetes-koveto\\vueapp\\src\\components\\HelloWorld.vue"],"sourcesContent":["<template>\r\n    <div class=\"post\">\r\n        <div v-if=\"loading\" class=\"loading\">\r\n            Loading... Please refresh once the ASP.NET backend has started. See <a href=\"https://aka.ms/jspsintegrationvue\">https://aka.ms/jspsintegrationvue</a> for more details.\r\n        </div>\r\n\r\n        <div v-if=\"post\" class=\"content\">\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Date</th>\r\n                        <th>Temp. (C)</th>\r\n                        <th>Temp. (F)</th>\r\n                        <th>Summary</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr v-for=\"forecast in post\" :key=\"forecast.date\">\r\n                        <td>{{ forecast.date }}</td>\r\n                        <td>{{ forecast.temperatureC }}</td>\r\n                        <td>{{ forecast.temperatureF }}</td>\r\n                        <td>{{ forecast.summary }}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"js\">\r\n    import { defineComponent } from 'vue';\r\n\r\n    export default defineComponent({\r\n        data() {\r\n            return {\r\n                loading: false,\r\n                post: null\r\n            };\r\n        },\r\n        created() {\r\n            // fetch the data when the view is created and the data is\r\n            // already being observed\r\n            this.fetchData();\r\n        },\r\n        watch: {\r\n            // call again the method if the route changes\r\n            '$route': 'fetchData'\r\n        },\r\n        methods: {\r\n            fetchData() {\r\n                this.post = null;\r\n                this.loading = true;\r\n\r\n                fetch('weatherforecast')\r\n                    .then(r => r.json())\r\n                    .then(json => {\r\n                        this.post = json;\r\n                        this.loading = false;\r\n                        return;\r\n                    });\r\n            }\r\n        },\r\n    });\r\n</script>"],"mappings":";;EACSA,KAAK,EAAC;AAAM;;;EACOA,KAAK,EAAC;;gCAC8CC,mBAAA,CAAiF;EAA9EC,IAAI,EAAC;AAAmC,GAAC,mCAAiC;;;EAGpIF,KAAK,EAAC;;gCAEfC,mBAAA,CAOQ,gB,aANJA,mBAAA,CAKK,a,aAJDA,mBAAA,CAAa,YAAT,MAAI,G,aACRA,mBAAA,CAAkB,YAAd,WAAS,G,aACbA,mBAAA,CAAkB,YAAd,WAAS,G,aACbA,mBAAA,CAAgB,YAAZ,SAAO,E;;;uBAZ/BE,mBAAA,CAyBM,OAzBNC,UAyBM,GAxBSC,IAAA,CAAAC,OAAO,I,cAAlBH,mBAAA,CAEM,OAFNI,UAEM,G,iBAF8B,uEACoC,GAAAC,UAAiF,E,iBAAA,qBACzJ,E,wCAEWH,IAAA,CAAAI,IAAI,I,cAAfN,mBAAA,CAmBM,OAnBNO,UAmBM,GAlBFT,mBAAA,CAiBQ,gBAhBJU,UAOQ,EACRV,mBAAA,CAOQ,iB,kBANJE,mBAAA,CAKKS,SAAA,QAAAC,WAAA,CALkBR,IAAA,CAAAI,IAAI,EAAhBK,QAAQ;yBAAnBX,mBAAA,CAKK;MALyBY,GAAG,EAAED,QAAQ,CAACE;QACxCf,mBAAA,CAA4B,YAAAgB,gBAAA,CAArBH,QAAQ,CAACE,IAAI,kBACpBf,mBAAA,CAAoC,YAAAgB,gBAAA,CAA7BH,QAAQ,CAACI,YAAY,kBAC5BjB,mBAAA,CAAoC,YAAAgB,gBAAA,CAA7BH,QAAQ,CAACK,YAAY,kBAC5BlB,mBAAA,CAA+B,YAAAgB,gBAAA,CAAxBH,QAAQ,CAACM,OAAO,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}