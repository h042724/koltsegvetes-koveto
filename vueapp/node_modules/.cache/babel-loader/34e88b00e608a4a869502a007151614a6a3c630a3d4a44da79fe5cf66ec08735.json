{"ast":null,"code":"const baseURL = \"http://localhost:8080/api\";\nexport default {\n  name: \"App\",\n  data() {\n    return {\n      postResult: null\n    };\n  },\n  methods: {\n    fortmatResponse(res) {\n      return JSON.stringify(res, null, 2);\n    },\n    async postData() {\n      const postData = {\n        title: this.$refs.post_title.value,\n        description: this.$refs.post_description.value\n      };\n      try {\n        const res = await fetch(`${baseURL}/tutorials`, {\n          method: \"post\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"x-access-token\": \"token-value\"\n          },\n          body: JSON.stringify(postData)\n        });\n        if (!res.ok) {\n          const message = `An error has occured: ${res.status} - ${res.statusText}`;\n          throw new Error(message);\n        }\n        const data = await res.json();\n        const result = {\n          status: res.status + \"-\" + res.statusText,\n          headers: {\n            \"Content-Type\": res.headers.get(\"Content-Type\"),\n            \"Content-Length\": res.headers.get(\"Content-Length\")\n          },\n          data: data\n        };\n        this.postResult = this.fortmatResponse(result);\n      } catch (err) {\n        this.postResult = err.message;\n      }\n    },\n    clearPostOutput() {\n      this.postResult = null;\n    }\n  }\n};","map":{"version":3,"names":["baseURL","name","data","postResult","methods","fortmatResponse","res","JSON","stringify","postData","title","$refs","post_title","value","description","post_description","fetch","method","headers","body","ok","message","status","statusText","Error","json","result","get","err","clearPostOutput"],"sources":["C:\\Users\\bajna\\Desktop\\temp\\koltsegvetes-koveto\\vueapp\\src\\views\\Expenses\\EditView.vue"],"sourcesContent":["<template>\r\n    <div id=\"app\" class=\"container\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">Vue Fetch POST - BezKoder.com</div>\r\n            <div class=\"card-body\">\r\n                <div class=\"form-group\">\r\n                    <input type=\"text\" class=\"form-control\" ref=\"post_title\" placeholder=\"Title\" />\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <input type=\"text\" class=\"form-control\" ref=\"post_description\" placeholder=\"Description\" />\r\n                </div>\r\n                <button class=\"btn btn-sm btn-primary\" @click=\"postData\">Post Data</button>\r\n                <button class=\"btn btn-sm btn-warning ml-2\" @click=\"clearPostOutput\">Clear</button>\r\n\r\n                <div v-if=\"postResult\" class=\"alert alert-secondary mt-2\" role=\"alert\"><pre>{{postResult}}</pre></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    const baseURL = \"http://localhost:8080/api\";\r\n\r\n    export default {\r\n        name: \"App\",\r\n        data() {\r\n            return {\r\n                postResult: null\r\n            }\r\n        },\r\n        methods: {\r\n            fortmatResponse(res) {\r\n                return JSON.stringify(res, null, 2);\r\n            },\r\n\r\n            async postData() {\r\n                const postData = {\r\n                    title: this.$refs.post_title.value,\r\n                    description: this.$refs.post_description.value,\r\n                };\r\n\r\n                try {\r\n                    const res = await fetch(`${baseURL}/tutorials`, {\r\n                        method: \"post\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\",\r\n                            \"x-access-token\": \"token-value\",\r\n                        },\r\n                        body: JSON.stringify(postData),\r\n                    });\r\n\r\n                    if (!res.ok) {\r\n                        const message = `An error has occured: ${res.status} - ${res.statusText}`;\r\n                        throw new Error(message);\r\n                    }\r\n\r\n                    const data = await res.json();\r\n\r\n                    const result = {\r\n                        status: res.status + \"-\" + res.statusText,\r\n                        headers: {\r\n                            \"Content-Type\": res.headers.get(\"Content-Type\"),\r\n                            \"Content-Length\": res.headers.get(\"Content-Length\"),\r\n                        },\r\n                        data: data,\r\n                    };\r\n\r\n                    this.postResult = this.fortmatResponse(result);\r\n                } catch (err) {\r\n                    this.postResult = err.message;\r\n                }\r\n            },\r\n\r\n            clearPostOutput() {\r\n                this.postResult = null;\r\n            },\r\n        }\r\n    }\r\n</script>"],"mappings":"AAqBI,MAAMA,OAAM,GAAI,2BAA2B;AAE3C,eAAe;EACXC,IAAI,EAAE,KAAK;EACXC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,UAAU,EAAE;IAChB;EACJ,CAAC;EACDC,OAAO,EAAE;IACLC,eAAeA,CAACC,GAAG,EAAE;MACjB,OAAOC,IAAI,CAACC,SAAS,CAACF,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC;IACvC,CAAC;IAED,MAAMG,QAAQA,CAAA,EAAG;MACb,MAAMA,QAAO,GAAI;QACbC,KAAK,EAAE,IAAI,CAACC,KAAK,CAACC,UAAU,CAACC,KAAK;QAClCC,WAAW,EAAE,IAAI,CAACH,KAAK,CAACI,gBAAgB,CAACF;MAC7C,CAAC;MAED,IAAI;QACA,MAAMP,GAAE,GAAI,MAAMU,KAAK,CAAE,GAAEhB,OAAQ,YAAW,EAAE;UAC5CiB,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACL,cAAc,EAAE,kBAAkB;YAClC,gBAAgB,EAAE;UACtB,CAAC;UACDC,IAAI,EAAEZ,IAAI,CAACC,SAAS,CAACC,QAAQ;QACjC,CAAC,CAAC;QAEF,IAAI,CAACH,GAAG,CAACc,EAAE,EAAE;UACT,MAAMC,OAAM,GAAK,yBAAwBf,GAAG,CAACgB,MAAM,MAAMhB,GAAG,CAACiB,UAAW,EAAC;UACzE,MAAM,IAAIC,KAAK,CAACH,OAAO,CAAC;QAC5B;QAEA,MAAMnB,IAAG,GAAI,MAAMI,GAAG,CAACmB,IAAI,EAAE;QAE7B,MAAMC,MAAK,GAAI;UACXJ,MAAM,EAAEhB,GAAG,CAACgB,MAAK,GAAI,GAAE,GAAIhB,GAAG,CAACiB,UAAU;UACzCL,OAAO,EAAE;YACL,cAAc,EAAEZ,GAAG,CAACY,OAAO,CAACS,GAAG,CAAC,cAAc,CAAC;YAC/C,gBAAgB,EAAErB,GAAG,CAACY,OAAO,CAACS,GAAG,CAAC,gBAAgB;UACtD,CAAC;UACDzB,IAAI,EAAEA;QACV,CAAC;QAED,IAAI,CAACC,UAAS,GAAI,IAAI,CAACE,eAAe,CAACqB,MAAM,CAAC;MAClD,EAAE,OAAOE,GAAG,EAAE;QACV,IAAI,CAACzB,UAAS,GAAIyB,GAAG,CAACP,OAAO;MACjC;IACJ,CAAC;IAEDQ,eAAeA,CAAA,EAAG;MACd,IAAI,CAAC1B,UAAS,GAAI,IAAI;IAC1B;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}