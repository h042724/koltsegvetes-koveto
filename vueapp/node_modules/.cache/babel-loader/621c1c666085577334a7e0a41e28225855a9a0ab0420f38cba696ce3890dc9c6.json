{"ast":null,"code":"export default {\n  name: 'IndexView',\n  components: {},\n  props: ['id'],\n  data() {\n    return {\n      loading: false,\n      post: null,\n      name: \"\",\n      amount: 0,\n      transactionDate: \"\"\n    };\n  },\n  created() {\n    // fetch the data when the view is created and the data is\n    // already being observed\n    this.fetchData();\n  },\n  watch: {\n    // call again the method if the route changes\n    '$route': 'fetchData'\n  },\n  methods: {\n    fetchData() {\n      this.post = null;\n      this.loading = true;\n      fetch('https://localhost:7007/expenses/').then(r => r.json()).then(json => {\n        this.post = json;\n        this.loading = false;\n        return;\n      });\n    },\n    async editExpense() {\n      const postData = {\n        name: this.$refs.post_name.value,\n        amount: this.$refs.post_amount.value,\n        transactionDate: this.$refs.post_transactionDate.value\n      };\n      try {\n        const res = await fetch(`https://localhost:7007/expenses`, {\n          method: \"post\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"x-access-token\": \"token-value\"\n          },\n          body: JSON.stringify(postData)\n        });\n        if (!res.ok) {\n          const message = `An error has occured: ${res.status} - ${res.statusText}`;\n          throw new Error(message);\n        }\n        const data = await res.json();\n        const result = {\n          status: res.status + \"-\" + res.statusText,\n          headers: {\n            \"Content-Type\": res.headers.get(\"Content-Type\"),\n            \"Content-Length\": res.headers.get(\"Content-Length\")\n          },\n          data: data\n        };\n        this.postResult = this.fortmatResponse(result);\n      } catch (err) {\n        this.postResult = err.message;\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","components","props","data","loading","post","amount","transactionDate","created","fetchData","watch","methods","fetch","then","r","json","editExpense","postData","$refs","post_name","value","post_amount","post_transactionDate","res","method","headers","body","JSON","stringify","ok","message","status","statusText","Error","result","get","postResult","fortmatResponse","err"],"sources":["C:\\Users\\bajna\\Desktop\\temp\\koltsegvetes-koveto\\vueapp\\src\\views\\Expenses\\EditView.vue"],"sourcesContent":["<template>\r\n    <div id=\"expense\">\r\n        <h1>Expense edit - Vue</h1>\r\n        <div v-if=\"post\" class=\"content\">\r\n            <form method=\"post\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-4\" v-for=\"expense in post\" :key=\"expense.id\">\r\n                        <div class=\"text-danger\"></div>\r\n                        <input type=\"number\" name=\"Id\" :value=expense.id disabled />\r\n                        <div class=\"form-group\">\r\n                            <label for=\"Name\" class=\"control-label\">Expense Name</label>\r\n                            <input name=\"Name\" class=\"form-control\" :value=expense.name ref=\"post_name\"/>\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label for=\"Amount\" class=\"control-label\">Amount</label>\r\n                            <input name=\"Amount\" class=\"form-control\" :value=expense.amount ref=\"post_amount\"/>\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label for=\"TransactionDate\" class=\"control-label\">Transaction Date</label>\r\n                            <input name=\"TransactionDate\" class=\"form-control\" :value=expense.transactionDate ref=\"post_transactionDate\"/>\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <button class=\"btn btn-sm btn-primary\" @click=\"editExpense\">Post Data</button>\r\n                            <div v-if=\"postResult\" class=\"alert alert-secondary mt-2\" role=\"alert\"><pre>{{postResult}}</pre></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: 'IndexView',\r\n    components: {},\r\n    props: ['id'],\r\n    data() {\r\n        return {\r\n            loading: false,\r\n            post: null,\r\n            name: \"\",\r\n            amount: 0,\r\n            transactionDate: \"\"\r\n        };\r\n    },\r\n    created() {\r\n        // fetch the data when the view is created and the data is\r\n        // already being observed\r\n        this.fetchData();\r\n    },\r\n    watch: {\r\n        // call again the method if the route changes\r\n        '$route': 'fetchData'\r\n    },\r\n    methods: {\r\n        fetchData() {\r\n            this.post = null;\r\n            this.loading = true;\r\n\r\n            fetch('https://localhost:7007/expenses/')\r\n                .then(r => r.json())\r\n                .then(json => {\r\n                    this.post = json;\r\n                    this.loading = false;\r\n                    return\r\n                });\r\n        },\r\n        async editExpense() {\r\n            const postData = {\r\n                name: this.$refs.post_name.value,\r\n                amount: this.$refs.post_amount.value,\r\n                transactionDate: this.$refs.post_transactionDate.value,\r\n            };\r\n\r\n            try {\r\n                const res = await fetch(`https://localhost:7007/expenses`, {\r\n                    method: \"post\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        \"x-access-token\": \"token-value\",\r\n                    },\r\n                    body: JSON.stringify(postData),\r\n                });\r\n\r\n                if (!res.ok) {\r\n                    const message = `An error has occured: ${res.status} - ${res.statusText}`;\r\n                    throw new Error(message);\r\n                }\r\n\r\n                const data = await res.json();\r\n\r\n                const result = {\r\n                    status: res.status + \"-\" + res.statusText,\r\n                    headers: {\r\n                        \"Content-Type\": res.headers.get(\"Content-Type\"),\r\n                        \"Content-Length\": res.headers.get(\"Content-Length\"),\r\n                    },\r\n                    data: data,\r\n                };\r\n\r\n                this.postResult = this.fortmatResponse(result);\r\n            } catch (err) {\r\n                this.postResult = err.message;\r\n            }\r\n        },\r\n    },\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"],"mappings":"AAiCA,eAAe;EACXA,IAAI,EAAE,WAAW;EACjBC,UAAU,EAAE,CAAC,CAAC;EACdC,KAAK,EAAE,CAAC,IAAI,CAAC;EACbC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,OAAO,EAAE,KAAK;MACdC,IAAI,EAAE,IAAI;MACVL,IAAI,EAAE,EAAE;MACRM,MAAM,EAAE,CAAC;MACTC,eAAe,EAAE;IACrB,CAAC;EACL,CAAC;EACDC,OAAOA,CAAA,EAAG;IACN;IACA;IACA,IAAI,CAACC,SAAS,EAAE;EACpB,CAAC;EACDC,KAAK,EAAE;IACH;IACA,QAAQ,EAAE;EACd,CAAC;EACDC,OAAO,EAAE;IACLF,SAASA,CAAA,EAAG;MACR,IAAI,CAACJ,IAAG,GAAI,IAAI;MAChB,IAAI,CAACD,OAAM,GAAI,IAAI;MAEnBQ,KAAK,CAAC,kCAAkC,EACnCC,IAAI,CAACC,CAAA,IAAKA,CAAC,CAACC,IAAI,EAAE,EAClBF,IAAI,CAACE,IAAG,IAAK;QACV,IAAI,CAACV,IAAG,GAAIU,IAAI;QAChB,IAAI,CAACX,OAAM,GAAI,KAAK;QACpB;MACJ,CAAC,CAAC;IACV,CAAC;IACD,MAAMY,WAAWA,CAAA,EAAG;MAChB,MAAMC,QAAO,GAAI;QACbjB,IAAI,EAAE,IAAI,CAACkB,KAAK,CAACC,SAAS,CAACC,KAAK;QAChCd,MAAM,EAAE,IAAI,CAACY,KAAK,CAACG,WAAW,CAACD,KAAK;QACpCb,eAAe,EAAE,IAAI,CAACW,KAAK,CAACI,oBAAoB,CAACF;MACrD,CAAC;MAED,IAAI;QACA,MAAMG,GAAE,GAAI,MAAMX,KAAK,CAAE,iCAAgC,EAAE;UACvDY,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACL,cAAc,EAAE,kBAAkB;YAClC,gBAAgB,EAAE;UACtB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACX,QAAQ;QACjC,CAAC,CAAC;QAEF,IAAI,CAACM,GAAG,CAACM,EAAE,EAAE;UACT,MAAMC,OAAM,GAAK,yBAAwBP,GAAG,CAACQ,MAAM,MAAMR,GAAG,CAACS,UAAW,EAAC;UACzE,MAAM,IAAIC,KAAK,CAACH,OAAO,CAAC;QAC5B;QAEA,MAAM3B,IAAG,GAAI,MAAMoB,GAAG,CAACR,IAAI,EAAE;QAE7B,MAAMmB,MAAK,GAAI;UACXH,MAAM,EAAER,GAAG,CAACQ,MAAK,GAAI,GAAE,GAAIR,GAAG,CAACS,UAAU;UACzCP,OAAO,EAAE;YACL,cAAc,EAAEF,GAAG,CAACE,OAAO,CAACU,GAAG,CAAC,cAAc,CAAC;YAC/C,gBAAgB,EAAEZ,GAAG,CAACE,OAAO,CAACU,GAAG,CAAC,gBAAgB;UACtD,CAAC;UACDhC,IAAI,EAAEA;QACV,CAAC;QAED,IAAI,CAACiC,UAAS,GAAI,IAAI,CAACC,eAAe,CAACH,MAAM,CAAC;MAClD,EAAE,OAAOI,GAAG,EAAE;QACV,IAAI,CAACF,UAAS,GAAIE,GAAG,CAACR,OAAO;MACjC;IACJ;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}