{"ast":null,"code":"export default {\n  name: 'IndexView',\n  components: {},\n  data() {\n    return {\n      expenses: [{\n        id: 1,\n        name: \"grocery\",\n        amount: 50,\n        date: \"2023.03.13\"\n      }]\n      /*loading: false,\r\n      post: null*/\n    };\n  }\n  /*created() {\r\n      // fetch the data when the view is created and the data is\r\n      // already being observed\r\n      this.fetchData();\r\n  },\r\n  watch: {\r\n      // call again the method if the route changes\r\n      '$route': 'fetchData'\r\n  },\r\n  methods: {\r\n      fetchData() {\r\n      this.post = null;\r\n      this.loading = true;\r\n        fetch('expenses')\r\n          .then(r => r.json())\r\n          .then(json => {\r\n              this.post = json;\r\n              this.loading = false;\r\n              return;\r\n          });\r\n      }\r\n  },*/\n};","map":{"version":3,"names":["name","components","data","expenses","id","amount","date"],"sources":["C:\\Users\\bajna\\Desktop\\temp\\koltsegvetes-koveto\\vueapp\\src\\views\\Expenses\\IndexView.vue"],"sourcesContent":["<template>\r\n    <div id=\"expense\">\r\n        <h1>Expense Index - Vue</h1>\r\n        <p>\r\n            <router-link :to=\"{ name: 'CreateExpenses' }\">Create new</router-link>\r\n        </p>\r\n        <div v-if=\"loading\" class=\"loading\">\r\n            Loading... Please refresh once the ASP.NET backend has started. See <a href=\"https://aka.ms/jspsintegrationvue\">https://aka.ms/jspsintegrationvue</a> for more details.\r\n        </div>\r\n\r\n        <div v-if=\"post\" class=\"content\">\r\n            <table class=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>\r\n                            id\r\n                        </th>\r\n                        <th>\r\n                            name\r\n                        </th>\r\n                        <th>\r\n                            amount ($)\r\n                        </th>\r\n                        <th>\r\n                            date\r\n                        </th>\r\n                        <th></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr v-for=\"expense in post\" :key=\"expense.id\">\r\n                        <td>\r\n                            {{expense.id}}\r\n                        </td>\r\n                        <td>\r\n                            {{expense.name}}\r\n                        </td>\r\n                        <td>\r\n                            {{expense.amount}}\r\n                        </td>\r\n                        <td>\r\n                            {{expense.date}}\r\n                        </td>\r\n                        <td>\r\n                            <router-link :to=\"{ name: 'EditExpenses', params: { id: expense.id}}\">Edit</router-link> |\r\n                            <router-link :to=\"{ name: 'DetailsExpenses', params: { id: expense.id}}\">Details</router-link> |\r\n                            <router-link :to=\"{ name: 'DeleteExpenses', params: { id: expense.id}}\">Delete</router-link>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n            </div>\r\n        </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: 'IndexView',\r\n    components: {},\r\n    data() {\r\n        return {\r\n            expenses: [\r\n                {id: 1, name: \"grocery\", amount: 50, date: \"2023.03.13\" }\r\n            ]\r\n        /*loading: false,\r\n        post: null*/\r\n        };\r\n    },\r\n    /*created() {\r\n        // fetch the data when the view is created and the data is\r\n        // already being observed\r\n        this.fetchData();\r\n    },\r\n    watch: {\r\n        // call again the method if the route changes\r\n        '$route': 'fetchData'\r\n    },\r\n    methods: {\r\n        fetchData() {\r\n        this.post = null;\r\n        this.loading = true;\r\n\r\n        fetch('expenses')\r\n            .then(r => r.json())\r\n            .then(json => {\r\n                this.post = json;\r\n                this.loading = false;\r\n                return;\r\n            });\r\n        }\r\n    },*/\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"],"mappings":"AAwDA,eAAe;EACXA,IAAI,EAAE,WAAW;EACjBC,UAAU,EAAE,CAAC,CAAC;EACdC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,QAAQ,EAAE,CACN;QAACC,EAAE,EAAE,CAAC;QAAEJ,IAAI,EAAE,SAAS;QAAEK,MAAM,EAAE,EAAE;QAAEC,IAAI,EAAE;MAAa;MAEhE;;IAEA,CAAC;EACL;EACA;;;;;;;;;;;;;;;;;;;;;;AAuBJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}