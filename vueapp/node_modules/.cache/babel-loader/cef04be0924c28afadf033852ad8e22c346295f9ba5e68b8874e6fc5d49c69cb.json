{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\",\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"card\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"card-header\"\n}, \"Vue Fetch POST\", -1 /* HOISTED */);\nconst _hoisted_4 = {\n  class: \"card-body\"\n};\nconst _hoisted_5 = {\n  class: \"form-group\"\n};\nconst _hoisted_6 = [\"value\"];\nconst _hoisted_7 = {\n  class: \"form-group\"\n};\nconst _hoisted_8 = [\"value\"];\nconst _hoisted_9 = {\n  class: \"form-group\"\n};\nconst _hoisted_10 = [\"value\"];\nconst _hoisted_11 = {\n  class: \"form-group\"\n};\nconst _hoisted_12 = [\"value\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [$data.post ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_hoisted_3, _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"input\", {\n    id: \"id\",\n    type: \"text\",\n    class: \"form-control\",\n    ref: \"post_id\",\n    value: $data.post,\n    disabled: \"\"\n  }, null, 8 /* PROPS */, _hoisted_6)]), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"input\", {\n    id: \"name\",\n    type: \"text\",\n    class: \"form-control\",\n    ref: \"post_name\",\n    value: _ctx.expense.name\n  }, null, 8 /* PROPS */, _hoisted_8)]), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"input\", {\n    id: \"amount\",\n    type: \"text\",\n    class: \"form-control\",\n    ref: \"post_amount\",\n    value: _ctx.expense.amount\n  }, null, 8 /* PROPS */, _hoisted_10)]), _createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"input\", {\n    id: \"transaction-date\",\n    type: \"text\",\n    class: \"form-control\",\n    ref: \"post_transactionDate\",\n    value: _ctx.expense.transactionDate\n  }, null, 8 /* PROPS */, _hoisted_12)]), _createElementVNode(\"button\", {\n    class: \"btn btn-sm btn-primary\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.postData && $options.postData(...args))\n  }, \"Post Data\")])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["id","class","_createElementVNode","_createElementBlock","_hoisted_1","$data","post","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","type","ref","value","disabled","_hoisted_7","_ctx","expense","name","_hoisted_9","amount","_hoisted_11","transactionDate","onClick","_cache","args","$options","postData"],"sources":["C:\\Users\\bajna\\Desktop\\temp\\koltsegvetes-koveto\\vueapp\\src\\views\\Expenses\\EditView.vue"],"sourcesContent":["<template>\r\n    <div id=\"app\" class=\"container\">\r\n        <div class=\"card\" v-if=\"post\">\r\n            <div class=\"card-header\">Vue Fetch POST</div>\r\n            <div class=\"card-body\">\r\n                <div class=\"form-group\">\r\n                    <input id=\"id\" type=\"text\" class=\"form-control\" ref=\"post_id\" :value=post disabled />\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <input id=\"name\" type=\"text\" class=\"form-control\" ref=\"post_name\" :value=expense.name />\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <input id=\"amount\" type=\"text\" class=\"form-control\" ref=\"post_amount\" :value=expense.amount />\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <input id=\"transaction-date\" type=\"text\" class=\"form-control\" ref=\"post_transactionDate\" :value=expense.transactionDate />\r\n                </div>\r\n                <button class=\"btn btn-sm btn-primary\" @click=\"postData\">Post Data</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    const uri = 'https://localhost:7007/expenses';\r\n\r\n    export default {\r\n        name: \"EditView\",\r\n        props: ['id'],\r\n        data() {\r\n            return {\r\n                loading: false,\r\n                post: null\r\n            }\r\n        },\r\n        created() {\r\n            this.fetchData();\r\n        },\r\n        watch: {\r\n            '$route': 'fetchData'\r\n        },\r\n        methods: {\r\n            fetchData() {\r\n                this.post = null;\r\n                this.loading = true;\r\n\r\n                fetch(`${uri}/${this.id}`)\r\n                    .then(r => r.json())\r\n                    .then(json => {\r\n                        this.post = json;\r\n                        this.loading = false;\r\n                        return\r\n                    });\r\n            },\r\n\r\n            async postData() {\r\n                const id = document.getElementById('id').value;\r\n                console.log(id);\r\n                const postData = {\r\n                    name: document.getElementById('name').value,\r\n                    amount: document.getElementById('amount').value,\r\n                    transactionDate: document.getElementById('transaction-date').value,\r\n                };\r\n\r\n                try {\r\n                    await fetch(`${uri}/edit`, {\r\n                        method: 'POST',\r\n                        headers: {\r\n                            'Accept': 'application/json',\r\n                            'Content-Type': 'application/json'\r\n                        },\r\n                        body: JSON.stringify(postData),\r\n                    }).then(function (response) {\r\n                        console.log(response.json(postData));\r\n                    }).catch(function (error) {\r\n                        console.error(error);\r\n                    });\r\n                } catch (err) {\r\n                    alert(err); // Failed to fetch\r\n                }\r\n            },\r\n        }\r\n    }\r\n</script>"],"mappings":";;EACSA,EAAE,EAAC,KAAK;EAACC,KAAK,EAAC;;;;EACXA,KAAK,EAAC;;gCACPC,mBAAA,CAA6C;EAAxCD,KAAK,EAAC;AAAa,GAAC,gBAAc;;EAClCA,KAAK,EAAC;AAAW;;EACbA,KAAK,EAAC;AAAY;;;EAGlBA,KAAK,EAAC;AAAY;;;EAGlBA,KAAK,EAAC;AAAY;;;EAGlBA,KAAK,EAAC;AAAY;;;uBAbnCE,mBAAA,CAmBM,OAnBNC,UAmBM,GAlBsBC,KAAA,CAAAC,IAAI,I,cAA5BH,mBAAA,CAiBM,OAjBNI,UAiBM,GAhBFC,UAA6C,EAC7CN,mBAAA,CAcM,OAdNO,UAcM,GAbFP,mBAAA,CAEM,OAFNQ,UAEM,GADFR,mBAAA,CAAqF;IAA9EF,EAAE,EAAC,IAAI;IAACW,IAAI,EAAC,MAAM;IAACV,KAAK,EAAC,cAAc;IAACW,GAAG,EAAC,SAAS;IAAEC,KAAK,EAACR,KAAA,CAAAC,IAAI;IAACQ,QAAQ,EAAR;yCAE9EZ,mBAAA,CAEM,OAFNa,UAEM,GADFb,mBAAA,CAAwF;IAAjFF,EAAE,EAAC,MAAM;IAACW,IAAI,EAAC,MAAM;IAACV,KAAK,EAAC,cAAc;IAACW,GAAG,EAAC,WAAW;IAAEC,KAAK,EAACG,IAAA,CAAAC,OAAO,CAACC;yCAErFhB,mBAAA,CAEM,OAFNiB,UAEM,GADFjB,mBAAA,CAA8F;IAAvFF,EAAE,EAAC,QAAQ;IAACW,IAAI,EAAC,MAAM;IAACV,KAAK,EAAC,cAAc;IAACW,GAAG,EAAC,aAAa;IAAEC,KAAK,EAACG,IAAA,CAAAC,OAAO,CAACG;0CAEzFlB,mBAAA,CAEM,OAFNmB,WAEM,GADFnB,mBAAA,CAA0H;IAAnHF,EAAE,EAAC,kBAAkB;IAACW,IAAI,EAAC,MAAM;IAACV,KAAK,EAAC,cAAc;IAACW,GAAG,EAAC,sBAAsB;IAAEC,KAAK,EAACG,IAAA,CAAAC,OAAO,CAACK;0CAE5GpB,mBAAA,CAA2E;IAAnED,KAAK,EAAC,wBAAwB;IAAEsB,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,QAAA,IAAAD,QAAA,CAAAC,QAAA,IAAAF,IAAA,CAAQ;KAAE,WAAS,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}