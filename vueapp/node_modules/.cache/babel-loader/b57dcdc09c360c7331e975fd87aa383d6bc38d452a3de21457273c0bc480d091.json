{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\",\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"card\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"card-header\"\n}, \"Vue Fetch POST\", -1 /* HOISTED */);\nconst _hoisted_4 = {\n  class: \"form-group\"\n};\nconst _hoisted_5 = [\"value\"];\nconst _hoisted_6 = {\n  class: \"form-group\"\n};\nconst _hoisted_7 = [\"value\"];\nconst _hoisted_8 = {\n  class: \"form-group\"\n};\nconst _hoisted_9 = [\"value\"];\nconst _hoisted_10 = {\n  class: \"form-group\"\n};\nconst _hoisted_11 = [\"value\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [$data.post ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_hoisted_3, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.post, expense => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"card-body\",\n      key: expense.id\n    }, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"input\", {\n      id: \"id\",\n      type: \"text\",\n      class: \"form-control\",\n      ref_for: true,\n      ref: \"post_id\",\n      value: expense.id,\n      disabled: \"\"\n    }, null, 8 /* PROPS */, _hoisted_5)]), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"input\", {\n      id: \"name\",\n      type: \"text\",\n      class: \"form-control\",\n      ref_for: true,\n      ref: \"post_name\",\n      value: expense.name\n    }, null, 8 /* PROPS */, _hoisted_7)]), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"input\", {\n      id: \"amount\",\n      type: \"text\",\n      class: \"form-control\",\n      ref_for: true,\n      ref: \"post_amount\",\n      value: expense.amount\n    }, null, 8 /* PROPS */, _hoisted_9)]), _createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"input\", {\n      id: \"transaction-date\",\n      type: \"text\",\n      class: \"form-control\",\n      ref_for: true,\n      ref: \"post_transactionDate\",\n      value: expense.transactionDate\n    }, null, 8 /* PROPS */, _hoisted_11)]), _createElementVNode(\"button\", {\n      class: \"btn btn-sm btn-primary\",\n      onClick: _cache[0] || (_cache[0] = (...args) => $options.postData && $options.postData(...args))\n    }, \"Post Data\")]);\n  }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["id","class","_createElementVNode","_createElementBlock","_hoisted_1","$data","post","_hoisted_2","_hoisted_3","_Fragment","_renderList","expense","key","_hoisted_4","type","ref","value","disabled","_hoisted_6","name","_hoisted_8","amount","_hoisted_10","transactionDate","onClick","_cache","args","$options","postData"],"sources":["C:\\Users\\bajna\\Desktop\\temp\\koltsegvetes-koveto\\vueapp\\src\\views\\Expenses\\EditView.vue"],"sourcesContent":["<template>\r\n    <div id=\"app\" class=\"container\">\r\n        <div class=\"card\" v-if=\"post\">\r\n            <div class=\"card-header\">Vue Fetch POST</div>\r\n            <div class=\"card-body\" v-for=\"expense in post\" :key=\"expense.id\">\r\n                <div class=\"form-group\">\r\n                    <input id=\"id\" type=\"text\" class=\"form-control\" ref=\"post_id\" :value=expense.id disabled />\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <input id=\"name\" type=\"text\" class=\"form-control\" ref=\"post_name\" :value=expense.name />\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <input id=\"amount\" type=\"text\" class=\"form-control\" ref=\"post_amount\" :value=expense.amount />\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <input id=\"transaction-date\" type=\"text\" class=\"form-control\" ref=\"post_transactionDate\" :value=expense.transactionDate />\r\n                </div>\r\n                <button class=\"btn btn-sm btn-primary\" @click=\"postData\">Post Data</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    const uri = 'https://localhost:7007/expenses';\r\n\r\n    export default {\r\n        name: \"EditView\",\r\n        props: ['id'],\r\n        data() {\r\n            return {\r\n                loading: false,\r\n                post: null\r\n            }\r\n        },\r\n        created() {\r\n            this.fetchData();\r\n        },\r\n        watch: {\r\n            '$route': 'fetchData'\r\n        },\r\n        methods: {\r\n            fetchData() {\r\n                this.post = null;\r\n                this.loading = true;\r\n\r\n                fetch(`${uri}`)\r\n                    .then(r => r.json())\r\n                    .then(json => {\r\n                        this.post = json;\r\n                        this.loading = false;\r\n                        return\r\n                    });\r\n            },\r\n\r\n            async postData() {\r\n                const id = document.getElementById('id').value;\r\n                console.log(id);\r\n                const postData = {\r\n                    name: document.getElementById('name').value,\r\n                    amount: document.getElementById('amount').value,\r\n                    transactionDate: document.getElementById('transaction-date').value,\r\n                };\r\n\r\n                try {\r\n                    await fetch(`${uri}`, {\r\n                        method: 'POST',\r\n                        headers: {\r\n                            'Accept': 'application/json',\r\n                            'Content-Type': 'application/json'\r\n                        },\r\n                        body: JSON.stringify(postData),\r\n                    }).then(function (response) {\r\n                        console.log(response.json(postData));\r\n                    }).then(function (text) {\r\n                        console.log(text);\r\n                    }).catch(function (error) {\r\n                        console.error(error);\r\n                    });\r\n                } catch (err) {\r\n                    alert(err); // Failed to fetch\r\n                }\r\n            },\r\n        }\r\n    }\r\n</script>"],"mappings":";;EACSA,EAAE,EAAC,KAAK;EAACC,KAAK,EAAC;;;;EACXA,KAAK,EAAC;;gCACPC,mBAAA,CAA6C;EAAxCD,KAAK,EAAC;AAAa,GAAC,gBAAc;;EAE9BA,KAAK,EAAC;AAAY;;;EAGlBA,KAAK,EAAC;AAAY;;;EAGlBA,KAAK,EAAC;AAAY;;;EAGlBA,KAAK,EAAC;AAAY;;;uBAbnCE,mBAAA,CAmBM,OAnBNC,UAmBM,GAlBsBC,KAAA,CAAAC,IAAI,I,cAA5BH,mBAAA,CAiBM,OAjBNI,UAiBM,GAhBFC,UAA6C,G,kBAC7CL,mBAAA,CAcMM,SAAA,QAAAC,WAAA,CAdmCL,KAAA,CAAAC,IAAI,EAAfK,OAAO;yBAArCR,mBAAA,CAcM;MAdDF,KAAK,EAAC,WAAW;MAA0BW,GAAG,EAAED,OAAO,CAACX;QACzDE,mBAAA,CAEM,OAFNW,UAEM,GADFX,mBAAA,CAA2F;MAApFF,EAAE,EAAC,IAAI;MAACc,IAAI,EAAC,MAAM;MAACb,KAAK,EAAC,cAAc;;MAACc,GAAG,EAAC,SAAS;MAAEC,KAAK,EAACL,OAAO,CAACX,EAAE;MAACiB,QAAQ,EAAR;2CAEpFf,mBAAA,CAEM,OAFNgB,UAEM,GADFhB,mBAAA,CAAwF;MAAjFF,EAAE,EAAC,MAAM;MAACc,IAAI,EAAC,MAAM;MAACb,KAAK,EAAC,cAAc;;MAACc,GAAG,EAAC,WAAW;MAAEC,KAAK,EAACL,OAAO,CAACQ;2CAErFjB,mBAAA,CAEM,OAFNkB,UAEM,GADFlB,mBAAA,CAA8F;MAAvFF,EAAE,EAAC,QAAQ;MAACc,IAAI,EAAC,MAAM;MAACb,KAAK,EAAC,cAAc;;MAACc,GAAG,EAAC,aAAa;MAAEC,KAAK,EAACL,OAAO,CAACU;2CAEzFnB,mBAAA,CAEM,OAFNoB,WAEM,GADFpB,mBAAA,CAA0H;MAAnHF,EAAE,EAAC,kBAAkB;MAACc,IAAI,EAAC,MAAM;MAACb,KAAK,EAAC,cAAc;;MAACc,GAAG,EAAC,sBAAsB;MAAEC,KAAK,EAACL,OAAO,CAACY;4CAE5GrB,mBAAA,CAA2E;MAAnED,KAAK,EAAC,wBAAwB;MAAEuB,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,QAAA,IAAAD,QAAA,CAAAC,QAAA,IAAAF,IAAA,CAAQ;OAAE,WAAS,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}